version: "3"
services:
    mongodb:
      image: mongo:latest
      container_name: mongodb
      hostname: mongodb
      environment:
        - MONGO_DATA_DIR=/data/db
        - MONGO_LOG_DIR=/dev/null
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=admin
      ports:
        - "27017:27017"
      volumes:
        - mongodbdata:/data/db
      networks:
        - login-ms
        - backend

    flask:
      build:
        context: app
        dockerfile: Dockerfile
      container_name: app-backend
      hostname: app-backend
      image: digitalocean.com/flask-python:3.6
      restart: unless-stopped
      environment:
        APP_ENV: "prod"
        APP_DEBUG: "False"
        APP_PORT: 5000
        MONGODB_DATABASE: flaskdb
        MONGODB_USERNAME: admin
        MONGODB_PASSWORD: admin
        MONGODB_HOSTNAME: mongodb
      ports:
        - "5000:5000"
      volumes:
        - appdata:/var/www
      depends_on:
        - mongodb
      networks:
        - login-ms
        - backend

    flask-login:
      build:
        context: login
        dockerfile: Dockerfile
      container_name: app-login
      hostname: app-login
      image: digitalocean.com/flask-python:3.7
      restart: unless-stopped
      environment:
        APP_ENV: "prod"
        APP_DEBUG: "False"
        APP_PORT: 5000
        MONGODB_DATABASE: flaskdb
        MONGODB_USERNAME: admin
        MONGODB_PASSWORD: admin
        MONGODB_HOSTNAME: mongodb
      ports:
        - "5001:5000"
      depends_on:
        - mongodb
      networks:
        - login-ms
networks:
  backend:
    driver: bridge
  login-ms:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local 
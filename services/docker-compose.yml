version: "3"
services:
    mongodb:
      image: mongo:latest
      container_name: mongodb
      hostname: mongodb
      environment:
        - MONGO_DATA_DIR=/data/db
        - MONGO_LOG_DIR=/dev/null
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=admin
      ports:
        - "27017:27017"
      volumes:
        - mongodbdata:/data/db
      networks:
        - login-ms
        - backend

    flask:
      build:
        context: app
        dockerfile: Dockerfile
      container_name: app-backend
      hostname: app-backend
      image: digitalocean.com/flask-python:3.7
      restart: unless-stopped
      environment:
        APP_ENV: "prod"
        APP_DEBUG: "False"
        APP_PORT: 5000
        MONGODB_DATABASE: flaskdb
        MONGODB_USERNAME: admin
        MONGODB_PASSWORD: admin
        MONGODB_HOSTNAME: mongodb
      ports:
        - "5000:5000"
      volumes:
        - appdata:/var/www
      depends_on:
        - mongodb
      networks:
        - login-ms
        - backend

    flask-login:
      build:
        context: login
        dockerfile: Dockerfile
      container_name: app-login
      hostname: app-login
      image: digitalocean.com/flask-python:3.7
      restart: unless-stopped
      environment:
        APP_ENV: "prod"
        APP_DEBUG: "False"
        APP_PORT: 5000
        MONGODB_DATABASE: flaskdb
        MONGODB_USERNAME: admin
        MONGODB_PASSWORD: admin
        MONGODB_HOSTNAME: mongodb
      ports:
        - "5001:5000"
      depends_on:
        - mongodb
      networks:
        - login-ms

    mongo-express:
      image: mongo-express:latest
      container_name: mongo-express
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: admin
        ME_CONFIG_MONGODB_ADMINPASSWORD: admin
        ME_CONFIG_MONGODB_SERVER: mongodb
        ME_CONFIG_MONGODB_PORT: "27017"
      ports:
        - "8081:8081"
      networks:
        - backend
      depends_on:
        - mongodb

    portainerservice:
      image: portainer/portainer
      volumes:
        - portainer_data:/data
        - /var/run/docker.sock:/var/run/docker.sock
      ports:
        - "9000:9000"

    mongo-prometheus:
      image: bitnami/mongodb-exporter:0.11.0-debian-10-r75
      ports:
        - 8880:9216
      environment: 
        - MONGODB_URI=mongodb://admin:admin@mongo:27017

    prometheus:
      image: flaviostutz/prometheus
      ports:
        - 9090:9090
      environment:
        - SCRAPE_INTERVAL=10s
        - SCRAPE_TIMEOUT=10s
        - STATIC_SCRAPE_TARGETS=mongo@mongo-prometheus:9216
      volumes:
        - prometheus_data:/prometheus

    grafana:
      image: grafana/grafana:5.2.4
      ports:
        - 3000:3000
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=mypass
      volumes:
        - grafana_data:/var/lib/grafana
      restart: always

networks:
  backend:
    driver: bridge
  login-ms:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  grafana_data:
  prometheus_data:
  portainer_data:
